[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/nwb2bids"]

# TODO: This is a temporary hack while waiting for hatch to support PEP 735,
#   Dependency Groups, in creating environments.
#   See https://github.com/pypa/hatch/pull/1922 for more details.
#

[tool.hatch.envs.default]
python = "3.10"
pre-install-commands = ["pip install --upgrade pip"]

# Execute `hatch env create test` to create all test environments.
# Use `+` and `-` to select tests environments to run tests if needed
# as documented in https://hatch.pypa.io/latest/cli/reference/#hatch-run.
[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]
feature = ["none", "dandi", "all"]
cov = ["off", "on"]
[tool.hatch.envs.test.overrides]
matrix.feature.features = [
  { value = "dandi", if = ["dandi"] },
  { value = "all", if = ["all"] },
]
matrix.cov.post-install-commands = [
  { value = "pip install --group test", if = ["off"] },
  { value = "pip install --group coverage", if = ["on"] },
]
[tool.hatch.envs.test.scripts]
run = "pytest {args:tests}"

[tool.hatch.envs.dev]
features = ["all"]
post-install-commands = ["pip install --group dev"]

[tool.hatch.envs.types]
features = ["all"]
post-install-commands = ["pip install --group types"]
[tool.hatch.envs.types.scripts]
# Define named script for type checking
check = "mypy --install-types --non-interactive {args:src/nwb2bids tests}"

[tool.hatch.envs.all]
features = ["all"]
post-install-commands = ["pip install --group dev-all"]



[project]
name = "nwb2bids"
authors = [
  { name="Cody Baker", email="cody.c.baker.phd@gmail.com" },
]
description = "Reorganize NWB files into a BIDS directory layout."
readme = "README.md"
keywords = [
    "data standards",
    "data organization",
    "BIDS",
    "Brain Imaging Data Structure",
    "NWB",
    "NeurodataWithoutBorders",
    "DANDI Archive",
    "neurodata",
    "neuroscience",
]
license = {file = "LICENSE.txt"}
requires-python = ">=3.10"
dependencies = [
    "pandas",
    "pynwb",
    "rich-click",
    "pydantic",
    "typing-extensions",  # TODO: remove when dropping support for Python 3.10
    "ruamel.yaml~=0.18.15",  # https://sourceforge.net/p/ruamel-yaml-clib/tickets/47/
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
]
dynamic = ["version"]

[project.optional-dependencies]
dandi = [
    "dandi",
    "remfile",
]
all = [
    "nwb2bids[dandi]",
]

[project.urls]
Repository = "https://github.com/con/nwb2bids/"
Issues = "https://github.com/con/nwb2bids/issues"
Changelog = "https://github.com/con/nwb2bids/blob/main/CHANGELOG.md"

[project.scripts]
nwb2bids = "nwb2bids._command_line_interface._main:_nwb2bids_cli"

[dependency-groups]
type-stubs = ["pandas-stubs"]
test = ["pytest"]
coverage = ["pytest-cov"]
dev = ["ipython", "pre-commit", {include-group = "type-stubs"}]
types = ["mypy", {include-group = "type-stubs"}]
docs = [
    "sphinx",
    "sphinx-tabs",
    "pydata-sphinx-theme",
]
dev-all = [
    {include-group = "test"},
    {include-group = "coverage"},
    {include-group = "dev"},
    {include-group = "types"},
    {include-group = "docs"},
]



[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.toml
  |\.yml
  |\.txt
  |\.sh
  |\.git
  |\.ini
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
plugins = ["pydantic.mypy"]

[tool.ruff]
exclude = [
  "*/__init__.py"
]
line-length = 120

[tool.ruff.lint]
select = ["F", "E", "I"]
ignore = [
    "PTH123",
    "D203",
    "D212",
    "T201",
    "FIX002",
    "TD003",
    "TD002",
    "S101",
    "ICN001",
    "INP001",
]
fixable = ["ALL"]

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
known-first-party = ["nwb2bids"]

[tool.ruff.lint.per-file-ignores]
"src/nwb2bids/_hidden_top_level_imports.py" = ["F401"]  # Must perform imports here even if not exposed



[tool.pytest.ini_options]
markers = [
    "remote: mark a test as requiring remote resources"
]
